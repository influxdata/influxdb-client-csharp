/* 
 * InfluxDB OSS API Service
 *
 * The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = InfluxDB.Client.Api.Client.OpenAPIDateConverter;

namespace InfluxDB.Client.Api.Domain
{
    /// <summary>
    /// Defines TemplateKind
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TemplateKind
    {
        /// <summary>
        /// Enum Bucket for value: Bucket
        /// </summary>
        [EnumMember(Value = "Bucket")] Bucket = 1,

        /// <summary>
        /// Enum Check for value: Check
        /// </summary>
        [EnumMember(Value = "Check")] Check = 2,

        /// <summary>
        /// Enum CheckDeadman for value: CheckDeadman
        /// </summary>
        [EnumMember(Value = "CheckDeadman")] CheckDeadman = 3,

        /// <summary>
        /// Enum CheckThreshold for value: CheckThreshold
        /// </summary>
        [EnumMember(Value = "CheckThreshold")] CheckThreshold = 4,

        /// <summary>
        /// Enum Dashboard for value: Dashboard
        /// </summary>
        [EnumMember(Value = "Dashboard")] Dashboard = 5,

        /// <summary>
        /// Enum Label for value: Label
        /// </summary>
        [EnumMember(Value = "Label")] Label = 6,

        /// <summary>
        /// Enum NotificationEndpoint for value: NotificationEndpoint
        /// </summary>
        [EnumMember(Value = "NotificationEndpoint")]
        NotificationEndpoint = 7,

        /// <summary>
        /// Enum NotificationEndpointHTTP for value: NotificationEndpointHTTP
        /// </summary>
        [EnumMember(Value = "NotificationEndpointHTTP")]
        NotificationEndpointHTTP = 8,

        /// <summary>
        /// Enum NotificationEndpointPagerDuty for value: NotificationEndpointPagerDuty
        /// </summary>
        [EnumMember(Value = "NotificationEndpointPagerDuty")]
        NotificationEndpointPagerDuty = 9,

        /// <summary>
        /// Enum NotificationEndpointSlack for value: NotificationEndpointSlack
        /// </summary>
        [EnumMember(Value = "NotificationEndpointSlack")]
        NotificationEndpointSlack = 10,

        /// <summary>
        /// Enum NotificationRule for value: NotificationRule
        /// </summary>
        [EnumMember(Value = "NotificationRule")]
        NotificationRule = 11,

        /// <summary>
        /// Enum Task for value: Task
        /// </summary>
        [EnumMember(Value = "Task")] Task = 12,

        /// <summary>
        /// Enum Telegraf for value: Telegraf
        /// </summary>
        [EnumMember(Value = "Telegraf")] Telegraf = 13,

        /// <summary>
        /// Enum Variable for value: Variable
        /// </summary>
        [EnumMember(Value = "Variable")] Variable = 14
    }
}